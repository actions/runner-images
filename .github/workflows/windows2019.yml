name: Windows2019
on:
  pull_request:
    types: [labeled]

jobs:
  build:
    name: Windows 2019
    runs-on: self-hosted
    if: github.event.label.name == 'test-windows2019'

    steps:
      - uses: actions/checkout@v2
    
      - name: Set build number
        run: |
          $UniqueBuildNumber = Get-Date -UFormat %s
          echo "::set-env name=UniqueBuildNumber::$UniqueBuildNumber"

      - name: Build VM
        run: |
          ./Images.CI/build-image.ps1 -ResourcesNamePrefix $env:UniqueBuildNumber `
                            -ClientId ${{ secrets.CLIENT_ID }} `
                            -ClientSecret ${{ secrets.CLIENT_SECRET }} `
                            -Image Windows2019-Azure `
                            -ResourceGroup ${{ secrets.AZURE_RESOURCE_GROUP }} `
                            -StorageAccount ${{ secrets.AZURE_STORAGE_ACCOUNT }} `
                            -SubscriptionId ${{ secrets.AZURE_SUBSCRIPTION }} `
                            -TenantId ${{ secrets.AZURE_TENANT }} `
                            -Location ${{ secrets.AZURE_LOCATION }} `
                            -VirtualNetworkName ${{ secrets.BUILD_AGENT_VNET_NAME }} `
                            -VirtualNetworkRG ${{ secrets.BUILD_AGENT_VNET_RESOURCE_GROUP }} `
                            -VirtualNetworkSubnet ${{ secrets.BUILD_AGENT_SUBNET_NAME }} `
                            -GitHubFeedToken ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up VM
        if: always()
        working-directory: ./Images.CI
        run: |
          ./cleanup.ps1 -ResourcesNamePrefix $env:UniqueBuildNumber `
                         -ClientId ${{ secrets.CLIENT_ID }} `
                         -ClientSecret ${{ secrets.CLIENT_SECRET }} `
                         -Image Windows2019-Azure `
                         -SubscriptionId ${{ secrets.AZURE_SUBSCRIPTION }} `
                         -TenantId ${{ secrets.AZURE_TENANT }}
